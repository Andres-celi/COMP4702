function [xfitresult, xgof] = createFits9x(x,fx)
%CREATEFITS1(X,FX)
%  Create fits.
%
%  Data for 'Poly 1' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 2' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 3' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 4' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 5' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 6' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 7' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 8' fit:
%      X Input : X
%      Y Output: fX
%  Data for 'poly 9' fit:
%      X Input : X
%      Y Output: fX
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 29-Mar-2017 15:01:58

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
xfitresult = cell( 9, 1 );
xgof = struct( 'sse', cell( 9, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Poly 1'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly1' );

% Fit model to data.
[xfitresult{1}, xgof(1)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
figure( 'Name', 'Poly 1' );
xh = plot( xfitresult{1}, x_xData, x_yData );
legend( xh, 'fX vs. X', 'Poly 1', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on
hold on
%% Fit: 'poly 2'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly2' );

% Fit model to data.
[xfitresult{2}, xgof(2)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 2' );
xh = plot( xfitresult{2}, 'b' );
legend( xh, 'fX vs. X', 'poly 2', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 3'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly3' );

% Fit model to data.
[xfitresult{3}, xgof(3)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 3' );
xh = plot( xfitresult{3}, 'g' );
legend( xh, 'fX vs. X', 'poly 3', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 4'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly4' );

% Fit model to data.
[xfitresult{4}, xgof(4)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 4' );
xh = plot( xfitresult{4}, 'c' );
% legend( h, 'fX vs. X', 'poly 4', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 5'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly5' );

% Fit model to data.
[xfitresult{5}, xgof(5)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 5' );
xh = plot( xfitresult{5}, 'y' );
% legend( h, 'fX vs. X', 'poly 5', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 6'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly6' );

% Fit model to data.
[xfitresult{6}, xgof(6)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 6' );
xh = plot( xfitresult{6});
% legend( h, 'fX vs. X', 'poly 6', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 7'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly7' );

% Fit model to data.
[xfitresult{7}, xgof(7)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 7' );
xh = plot( xfitresult{7});
% legend( h, 'fX vs. X', 'poly 7', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 8'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly8' );

% Fit model to data.
[xfitresult{8}, xgof(8)] = fit( x_xData, x_yData, xft );

% Plot fit with data.
% figure( 'Name', 'poly 8' );
xh = plot( xfitresult{8},'k' );
% legend( h, 'fX vs. X', 'poly 8', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on

%% Fit: 'poly 9'.
[x_xData, x_yData] = prepareCurveData( x, fx );

% Set up fittype and options.
xft = fittype( 'poly9' );

% Fit model to data.
[xfitresult{9}, xgof(9)] = fit( x_xData, x_yData, xft,'Normalize','on');

% Plot fit with data.
% figure( 'Name', 'poly 9' );
xh = plot( xfitresult{9});
legend( 'fX vs. X','poly 1','poly 2','poly 3','poly4',...
        'poly 5','poly 6','poly 7','poly 8','poly 9' );
% Label axes
xlabel X
ylabel fX
grid on

%% plot of various sse vs polynome degree
xgof1=xgof(1).sse;
xgof2=xgof(2).sse;
xgof3=xgof(3).sse;
xgof4=xgof(4).sse;
xgof5=xgof(5).sse;
xgof6=xgof(6).sse;
xgof7=xgof(7).sse;
xgof8=xgof(8).sse;
xgof9=xgof(9).sse;
xSSEs = [xgof1/length(x),xgof2/length(x),xgof3/length(x),xgof4/length(x),...
        xgof5/length(x),xgof6/length(x),xgof7/length(x),xgof8/length(x),...
        xgof9/length(x)];
PolynomesDegree=[1 2 3 4 5 6 7 8 9];


p = plot(PolynomesDegree,xSSEs,'Marker','*');
title('training/validation mse vs polynome degrees');
legend('training mse vs polynome degree','validation mse vs polynome degree');
ylabel mse
xlabel Degree
grid on


