function [fitresult, gof] = createFit222(x,X, fX)
%CREATEFIT(X,FX)
%  Create a fit.
%
%  Data for 'polynomial 1' fit:
%      X Input : X
%      Y Output: fX
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 28-Mar-2017 23:18:55


%% Fit: 'polynomial 1'.
[xData, yData] = prepareCurveData( X, fX );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft );

% Plot fit with data.


%% Fit: 'polynomial 2'.
[xData2, yData2] = prepareCurveData( X, fX );

% Set up fittype and options.
ft2 = fittype( 'poly2' );

% Fit model to data.
[fitresult2, gof2] = fit( xData2, yData2, ft2 );

%% Fit: 'polynomial 3'.
[xData3, yData3] = prepareCurveData( X, fX );

% Set up fittype and options.
ft3 = fittype( 'poly3' );

% Fit model to data.
[fitresult3, gof3] = fit( xData3, yData3, ft3 );

% Plot fit with data.




%% Fit: 'polynomial 4'.
[xData4, yData4] = prepareCurveData( X, fX );

% Set up fittype and options.
ft4 = fittype( 'poly4' );

% Fit model to data.
[fitresult4, gof4] = fit( xData4, yData4, ft4 );

% Plot fit with data.


%% Fit: 'polynomial 5'.
[xData5, yData5] = prepareCurveData( X, fX );

% Set up fittype and options.
ft5 = fittype( 'poly5' );

% Fit model to data.
[fitresult5, gof5] = fit( xData5, yData5, ft5 );

% Plot fit with data.

%% Fit: 'polynomial 6'.
[xData6, yData6] = prepareCurveData( X, fX );

% Set up fittype and options.
ft6 = fittype( 'poly6' );

% Fit model to data.
[fitresult6, gof6] = fit( xData6, yData6, ft6 );

% Plot fit with data.


%% Fit: 'polynomial 7'.
[xData7, yData7] = prepareCurveData( X, fX );

% Set up fittype and options.
ft7 = fittype( 'poly7' );

% Fit model to data.
[fitresult7, gof7] = fit( xData7, yData7, ft7 );

% Plot fit with data.


%% Fit: 'polynomial 8'.
[xData8, yData8] = prepareCurveData( X, fX );

% Set up fittype and options.
ft8 = fittype( 'poly8' );

% Fit model to data.
[fitresult8, gof8] = fit( xData8, yData8, ft8 );

% Plot fit with data.


%% Fit: 'polynomial 9'.
[xData9, yData9] = prepareCurveData( X, fX );

% Set up fittype and options.
ft9 = fittype( 'poly9' );

% Fit model to data.
[fitresult9, gof9] = fit( xData9, yData9, ft9 );

% Plot fit with data.
hold on
h = plot( fitresult, xData, yData );
h2 = plot( fitresult2, xData2, yData2);
h3= plot( fitresult3, xData3, yData3 );
h4= plot( fitresult4, xData4, yData4 );
h5= plot( fitresult5, xData5, yData5 );
h6= plot( fitresult6, xData6, yData6 );
h7= plot( fitresult7, xData7, yData7);
h8= plot( fitresult8, xData8, yData8 );
h9= plot( fitresult9, xData9, yData9 );
legend('fX vs. X', 'polynomial 1', 'polynomial 2', 'polynomial 3',...
    'polynomial 4', 'polynomial 5', 'polynomial 6','polynomial 7',...
    'polynomial 8', 'polynomial 9', 'Location', 'NorthEast' );
% Label axes
xlabel X
ylabel fX
grid on
%% plot of various sse vs polynome degree
SSEs = [gof.sse/length(x),gof2.sse/length(x),gof3.sse/length(x),gof4.sse/length(x),...
        gof5.sse/length(x),gof6.sse/length(x),gof7.sse/length(x),gof8.sse/length(x),...
        gof9.sse/length(x)];
PolynomesDegree=[1 2 3 4 5 6 7 8 9];

figure( 'Name', 'sse vs polynome degree')
p = plot(PolynomesDegree,MSEs);
xlabel mse
ylabel Degree
grid on
